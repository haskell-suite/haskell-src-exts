ParseOk (Module (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 16, srcSpanEndColumn = 1}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 1, srcSpanEndLine = 6, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 7, srcSpanStartColumn = 1, srcSpanEndLine = 7, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 1, srcSpanEndLine = 14, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 1, srcSpanEndLine = 15, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 16, srcSpanStartColumn = 1, srcSpanEndLine = 16, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 16, srcSpanStartColumn = 1, srcSpanEndLine = 16, srcSpanEndColumn = 1}]}) (Just (ModuleHead (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 27}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 2, srcSpanStartColumn = 1, srcSpanEndLine = 2, srcSpanEndColumn = 7},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 2, srcSpanStartColumn = 22, srcSpanEndLine = 2, srcSpanEndColumn = 27}]}) (ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 2, srcSpanStartColumn = 8, srcSpanEndLine = 2, srcSpanEndColumn = 21}, srcInfoPoints = []}) "UnicodeSyntax") Nothing Nothing)) [LanguagePragma (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 47}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 13},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 1, srcSpanStartColumn = 27, srcSpanEndLine = 1, srcSpanEndColumn = 28},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 1, srcSpanStartColumn = 44, srcSpanEndLine = 1, srcSpanEndColumn = 47}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 1, srcSpanStartColumn = 14, srcSpanEndLine = 1, srcSpanEndColumn = 27}, srcInfoPoints = []}) "UnicodeSyntax",Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 1, srcSpanStartColumn = 29, srcSpanEndLine = 1, srcSpanEndColumn = 43}, srcInfoPoints = []}) "ExplicitForAll"]] [ImportDecl {importAnn = SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 36}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 7}]}, importModule = ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 8, srcSpanEndLine = 4, srcSpanEndColumn = 26}, srcInfoPoints = []}) "System.Environment", importQualified = False, importSrc = False, importPkg = Nothing, importAs = Nothing, importSpecs = Just (ImportSpecList (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 27, srcSpanEndLine = 4, srcSpanEndColumn = 36}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 27, srcSpanEndLine = 4, srcSpanEndColumn = 28},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 35, srcSpanEndLine = 4, srcSpanEndColumn = 36}]}) False [IVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 28, srcSpanEndLine = 4, srcSpanEndColumn = 35}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 4, srcSpanStartColumn = 28, srcSpanEndLine = 4, srcSpanEndColumn = 35}, srcInfoPoints = []}) "getArgs")])}] [TypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 1, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 6, srcSpanEndLine = 6, srcSpanEndColumn = 7}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 1, srcSpanEndLine = 6, srcSpanEndColumn = 5}, srcInfoPoints = []}) "main"] (TyApp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 8, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = []}) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 8, srcSpanEndLine = 6, srcSpanEndColumn = 10}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 8, srcSpanEndLine = 6, srcSpanEndColumn = 10}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 8, srcSpanEndLine = 6, srcSpanEndColumn = 10}, srcInfoPoints = []}) "IO"))) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 11, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 11, srcSpanEndLine = 6, srcSpanEndColumn = 12},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 12, srcSpanEndLine = 6, srcSpanEndColumn = 13}]}) (Special (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 11, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 11, srcSpanEndLine = 6, srcSpanEndColumn = 12},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 12, srcSpanEndLine = 6, srcSpanEndColumn = 13}]}) (UnitCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 11, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 11, srcSpanEndLine = 6, srcSpanEndColumn = 12},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 6, srcSpanStartColumn = 12, srcSpanEndLine = 6, srcSpanEndColumn = 13}]}))))),PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 7, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 0}, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 7, srcSpanStartColumn = 1, srcSpanEndLine = 7, srcSpanEndColumn = 5}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 7, srcSpanStartColumn = 1, srcSpanEndLine = 7, srcSpanEndColumn = 5}, srcInfoPoints = []}) "main")) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 7, srcSpanStartColumn = 6, srcSpanEndLine = 11, srcSpanEndColumn = 0}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 7, srcSpanStartColumn = 6, srcSpanEndLine = 7, srcSpanEndColumn = 7}]}) (Do (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 7, srcSpanStartColumn = 8, srcSpanEndLine = 11, srcSpanEndColumn = 0}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 7, srcSpanStartColumn = 8, srcSpanEndLine = 7, srcSpanEndColumn = 10},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 8, srcSpanStartColumn = 3, srcSpanEndLine = 8, srcSpanEndColumn = 3},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 3, srcSpanEndLine = 9, srcSpanEndColumn = 3},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 0}]}) [Generator (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 8, srcSpanStartColumn = 3, srcSpanEndLine = 8, srcSpanEndColumn = 15}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 8, srcSpanStartColumn = 6, srcSpanEndLine = 8, srcSpanEndColumn = 7}]}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 8, srcSpanStartColumn = 3, srcSpanEndLine = 8, srcSpanEndColumn = 5}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 8, srcSpanStartColumn = 3, srcSpanEndLine = 8, srcSpanEndColumn = 5}, srcInfoPoints = []}) "as")) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 8, srcSpanStartColumn = 8, srcSpanEndLine = 8, srcSpanEndColumn = 15}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 8, srcSpanStartColumn = 8, srcSpanEndLine = 8, srcSpanEndColumn = 15}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 8, srcSpanStartColumn = 8, srcSpanEndLine = 8, srcSpanEndColumn = 15}, srcInfoPoints = []}) "getArgs"))),Qualifier (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 3, srcSpanEndLine = 9, srcSpanEndColumn = 17}, srcInfoPoints = []}) (InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 3, srcSpanEndLine = 9, srcSpanEndColumn = 17}, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 3, srcSpanEndLine = 9, srcSpanEndColumn = 8}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 3, srcSpanEndLine = 9, srcSpanEndColumn = 8}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 3, srcSpanEndLine = 9, srcSpanEndColumn = 8}, srcInfoPoints = []}) "print"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 9, srcSpanEndLine = 9, srcSpanEndColumn = 10}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 9, srcSpanEndLine = 9, srcSpanEndColumn = 10}, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 9, srcSpanEndLine = 9, srcSpanEndColumn = 10}, srcInfoPoints = []}) "$"))) (App (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 11, srcSpanEndLine = 9, srcSpanEndColumn = 17}, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 11, srcSpanEndLine = 9, srcSpanEndColumn = 15}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 11, srcSpanEndLine = 9, srcSpanEndColumn = 15}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 11, srcSpanEndLine = 9, srcSpanEndColumn = 15}, srcInfoPoints = []}) "test"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 16, srcSpanEndLine = 9, srcSpanEndColumn = 17}, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 9, srcSpanStartColumn = 16, srcSpanEndLine = 9, srcSpanEndColumn = 17}, srcInfoPoints = []}) 0 "0"))))])) Nothing,TypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 18}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 6, srcSpanEndLine = 11, srcSpanEndColumn = 7}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 5}, srcInfoPoints = []}) "test"] (TyFun (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 8, srcSpanEndLine = 11, srcSpanEndColumn = 18}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 12, srcSpanEndLine = 11, srcSpanEndColumn = 13}]}) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 8, srcSpanEndLine = 11, srcSpanEndColumn = 11}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 8, srcSpanEndLine = 11, srcSpanEndColumn = 11}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 8, srcSpanEndLine = 11, srcSpanEndColumn = 11}, srcInfoPoints = []}) "Int"))) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 14, srcSpanEndLine = 11, srcSpanEndColumn = 18}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 14, srcSpanEndLine = 11, srcSpanEndColumn = 18}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 11, srcSpanStartColumn = 14, srcSpanEndLine = 11, srcSpanEndColumn = 18}, srcInfoPoints = []}) "Bool")))),FunBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) [Match (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 5}, srcInfoPoints = []}) "test") [PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 6, srcSpanEndLine = 12, srcSpanEndColumn = 7}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 6, srcSpanEndLine = 12, srcSpanEndColumn = 7}, srcInfoPoints = []}) "x")] (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 8, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 8, srcSpanEndLine = 12, srcSpanEndColumn = 9}]}) (InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 10, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) (InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 10, srcSpanEndLine = 12, srcSpanEndColumn = 13}, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 10, srcSpanEndLine = 12, srcSpanEndColumn = 11}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 10, srcSpanEndLine = 12, srcSpanEndColumn = 11}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 10, srcSpanEndLine = 12, srcSpanEndColumn = 11}, srcInfoPoints = []}) "x"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 11, srcSpanEndLine = 12, srcSpanEndColumn = 12}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 11, srcSpanEndLine = 12, srcSpanEndColumn = 12}, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 11, srcSpanEndLine = 12, srcSpanEndColumn = 12}, srcInfoPoints = []}) "*"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 12, srcSpanEndLine = 12, srcSpanEndColumn = 13}, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 12, srcSpanEndLine = 12, srcSpanEndColumn = 13}, srcInfoPoints = []}) 5 "5"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 14, srcSpanEndLine = 12, srcSpanEndColumn = 16}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 14, srcSpanEndLine = 12, srcSpanEndColumn = 16}, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 14, srcSpanEndLine = 12, srcSpanEndColumn = 16}, srcInfoPoints = []}) "=="))) (InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 17, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 17, srcSpanEndLine = 12, srcSpanEndColumn = 18}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 17, srcSpanEndLine = 12, srcSpanEndColumn = 18}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 17, srcSpanEndLine = 12, srcSpanEndColumn = 18}, srcInfoPoints = []}) "x"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 18, srcSpanEndLine = 12, srcSpanEndColumn = 19}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 18, srcSpanEndLine = 12, srcSpanEndColumn = 19}, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 18, srcSpanEndLine = 12, srcSpanEndColumn = 19}, srcInfoPoints = []}) "+"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 19, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 12, srcSpanStartColumn = 19, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) 8 "8"))))) Nothing],TypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 1, srcSpanEndLine = 14, srcSpanEndColumn = 18}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 5, srcSpanEndLine = 14, srcSpanEndColumn = 6}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 1, srcSpanEndLine = 14, srcSpanEndColumn = 4}, srcInfoPoints = []}) "id1"] (TyForall (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 7, srcSpanEndLine = 14, srcSpanEndColumn = 18}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 7, srcSpanEndLine = 14, srcSpanEndColumn = 8},SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 11, srcSpanEndLine = 14, srcSpanEndColumn = 12}]}) (Just [UnkindedVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 9, srcSpanEndLine = 14, srcSpanEndColumn = 10}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 9, srcSpanEndLine = 14, srcSpanEndColumn = 10}, srcInfoPoints = []}) "a")]) Nothing (TyFun (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 13, srcSpanEndLine = 14, srcSpanEndColumn = 18}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 15, srcSpanEndLine = 14, srcSpanEndColumn = 16}]}) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 13, srcSpanEndLine = 14, srcSpanEndColumn = 14}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 13, srcSpanEndLine = 14, srcSpanEndColumn = 14}, srcInfoPoints = []}) "a")) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 17, srcSpanEndLine = 14, srcSpanEndColumn = 18}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 14, srcSpanStartColumn = 17, srcSpanEndLine = 14, srcSpanEndColumn = 18}, srcInfoPoints = []}) "a")))),FunBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 1, srcSpanEndLine = 15, srcSpanEndColumn = 10}, srcInfoPoints = []}) [Match (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 1, srcSpanEndLine = 15, srcSpanEndColumn = 10}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 1, srcSpanEndLine = 15, srcSpanEndColumn = 4}, srcInfoPoints = []}) "id1") [PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 5, srcSpanEndLine = 15, srcSpanEndColumn = 6}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 5, srcSpanEndLine = 15, srcSpanEndColumn = 6}, srcInfoPoints = []}) "x")] (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 7, srcSpanEndLine = 15, srcSpanEndColumn = 10}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 7, srcSpanEndLine = 15, srcSpanEndColumn = 8}]}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 9, srcSpanEndLine = 15, srcSpanEndColumn = 10}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 9, srcSpanEndLine = 15, srcSpanEndColumn = 10}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/UnicodeSyntax.hs", srcSpanStartLine = 15, srcSpanStartColumn = 9, srcSpanEndLine = 15, srcSpanEndColumn = 10}, srcInfoPoints = []}) "x")))) Nothing]],[])
