{-# LANGUAGE HexFloatLiterals #-}
{-# LANGUAGE NumericUnderscores #-}

import GHC.Types

main = do
    print [ 0x0, -0x0, 0x1, -0x1
          , 0xF, -0xF, 0xF, -0xF
          , 0x00000000000000000000000000000000000000000000000000000000000000000000000000001
          , 0x0000000000000000000000000000000000000000000000000000000000000000000000000000F
          , -0x00000000000000000000000000000000000000000000000000000000000000000000000000001
          , -0x0000000000000000000000000000000000000000000000000000000000000000000000000000F
          , -0x11.11, -0x11.11
          , -0xFF.FF, -0xFF.FF
          , -0xFF.FFp12, -0xFF.FFp12
          , -0xFF.FFp-12, -0xFF.FFp-12
          ]

    print [ 0x0, 0x1, 0x10, 0x11, 0x100, 0x101, 0x110, 0x111 :: Integer
          , -0x0, -0x1, -0x10, -0x11, -0x100, -0x101, -0x110, -0x111
          , 0x11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
          , -0x11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
          ]

    print [ 0x0_0, -0x0_0, 0x1_0, -0x1_0
          , 0xF_0, -0xF_0, 0xF_F, -0xF_F
          , 0x000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_01
          , 0x000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_0F
          , -0x000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_01
          , -0x000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_000_0F
          , -0x11_0.11_0, -0x11_0.11_0
          , -0xFF_0.FF_0, -0xFF_0.FF_0
          , -0xF_F.F_Fp1_2, -0xF_F.F_Fp1_2
          , -0xF_F.F_Fp-1_2, -0xF_F.F_Fp-1_2
          ]

    print [ 0x0_0, 0x1_0, 0x10_0, 0x11_0, 0x100_0, 0x101_0, 0x110_0, 0x111_0 :: Integer
          , -0x0_0, -0x1_0, -0x10_0, -0x11_0, -0x100_0, -0x101_0, -0x110_0, -0x111_0
          , 0x111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_11
          , -0x111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_111_11
          ]
