ParseOk (Module (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 1 1 24 1, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 1 1 1 1,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 2 1 2 1,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 4 1 4 1,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 4 1 4 1,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 4 1 4 1,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 6 1 6 1,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 24 1 24 1,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 24 1 24 1]}) Nothing [LanguagePragma (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 1 1 1 32, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 1 1 1 13,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 1 29 1 32]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 1 14 1 28, srcInfoPoints = []}) "BinaryLiterals"],LanguagePragma (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 2 1 2 27, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 2 1 2 13,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 2 24 2 27]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 2 14 2 23, srcInfoPoints = []}) "MagicHash"]] [ImportDecl {importAnn = SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 4 1 4 17, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 4 1 4 7]}, importModule = ModuleName (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 4 8 4 17, srcInfoPoints = []}) "GHC.Types", importQualified = False, importSrc = False, importSafe = False, importPkg = Nothing, importAs = Nothing, importSpecs = Nothing}] [PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 6 1 23 47, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 6 1 6 5, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 6 1 6 5, srcInfoPoints = []}) "main")) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 6 6 23 47, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 6 6 6 7]}) (Do (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 6 8 23 47, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 6 8 6 10,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 5 7 5,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 5 13 5,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 5 17 5,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 5 23 5,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 24 1 24 0]}) [Qualifier (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 5 12 12, srcInfoPoints = []}) (App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 5 12 12, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 5 7 10, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 5 7 10, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 5 7 10, srcInfoPoints = []}) "print"))) (List (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 11 12 12, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 11 7 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 20 7 21,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 30 7 31,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 39 7 40,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 8 11 8 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 11 9 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 11 10 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 28 10 29,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 11 11 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 28 11 29,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 12 11 12 12]}) [App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 13 7 20, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 13 7 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 13 7 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 13 7 15, srcInfoPoints = []}) "I#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 16 7 20, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 16 7 20, srcInfoPoints = []}) 0 "0b0")),InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 22 7 30, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 22 7 24, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 22 7 24, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 22 7 24, srcInfoPoints = []}) "I#"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 25 7 26, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 25 7 26, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 25 7 26, srcInfoPoints = []}) "-"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 26 7 30, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 26 7 30, srcInfoPoints = []}) 0 "0b0")),App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 32 7 39, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 32 7 34, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 32 7 34, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 32 7 34, srcInfoPoints = []}) "I#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 35 7 39, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 35 7 39, srcInfoPoints = []}) 1 "0b1")),InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 41 7 49, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 41 7 43, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 41 7 43, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 41 7 43, srcInfoPoints = []}) "I#"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 44 7 45, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 44 7 45, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 44 7 45, srcInfoPoints = []}) "-"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 45 7 49, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 7 45 7 49, srcInfoPoints = []}) 1 "0b1")),App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 8 13 8 96, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 8 13 8 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 8 13 8 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 8 13 8 15, srcInfoPoints = []}) "I#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 8 16 8 96, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 8 16 8 96, srcInfoPoints = []}) 1 "0b00000000000000000000000000000000000000000000000000000000000000000000000000001")),InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 13 9 97, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 13 9 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 13 9 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 13 9 15, srcInfoPoints = []}) "I#"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 16 9 17, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 16 9 17, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 16 9 17, srcInfoPoints = []}) "-"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 17 9 97, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 9 17 9 97, srcInfoPoints = []}) 1 "0b00000000000000000000000000000000000000000000000000000000000000000000000000001")),InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 13 10 28, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 13 10 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 13 10 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 13 10 15, srcInfoPoints = []}) "I#"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 16 10 17, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 16 10 17, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 16 10 17, srcInfoPoints = []}) "-"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 17 10 28, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 17 10 28, srcInfoPoints = []}) 201 "0b11001001")),InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 30 10 45, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 30 10 32, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 30 10 32, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 30 10 32, srcInfoPoints = []}) "I#"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 33 10 34, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 33 10 34, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 33 10 34, srcInfoPoints = []}) "-"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 34 10 45, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 10 34 10 45, srcInfoPoints = []}) 201 "0b11001001")),InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 13 11 28, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 13 11 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 13 11 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 13 11 15, srcInfoPoints = []}) "I#"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 16 11 17, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 16 11 17, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 16 11 17, srcInfoPoints = []}) "-"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 17 11 28, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 17 11 28, srcInfoPoints = []}) 255 "0b11111111")),InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 30 11 45, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 30 11 32, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 30 11 32, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 30 11 32, srcInfoPoints = []}) "I#"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 33 11 34, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 33 11 34, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 33 11 34, srcInfoPoints = []}) "-"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 34 11 45, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 11 34 11 45, srcInfoPoints = []}) 255 "0b11111111"))])),Qualifier (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 5 15 12, srcInfoPoints = []}) (App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 5 15 12, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 5 13 10, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 5 13 10, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 5 13 10, srcInfoPoints = []}) "print"))) (List (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 11 15 12, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 11 13 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 21 13 22,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 31 13 32,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 48 13 49,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 59 13 60,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 14 11 14 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 15 11 15 12]}) [App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 13 13 21, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 13 13 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 13 13 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 13 13 15, srcInfoPoints = []}) "W#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 16 13 21, srcInfoPoints = []}) (PrimWord (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 16 13 21, srcInfoPoints = []}) 0 "0b0")),App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 23 13 31, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 23 13 25, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 23 13 25, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 23 13 25, srcInfoPoints = []}) "W#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 26 13 31, srcInfoPoints = []}) (PrimWord (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 26 13 31, srcInfoPoints = []}) 1 "0b1")),App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 33 13 48, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 33 13 35, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 33 13 35, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 33 13 35, srcInfoPoints = []}) "W#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 36 13 48, srcInfoPoints = []}) (PrimWord (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 36 13 48, srcInfoPoints = []}) 201 "0b11001001")),App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 50 13 59, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 50 13 52, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 50 13 52, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 50 13 52, srcInfoPoints = []}) "W#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 53 13 59, srcInfoPoints = []}) (PrimWord (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 53 13 59, srcInfoPoints = []}) 3 "0b11")),App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 61 13 76, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 61 13 63, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 61 13 63, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 61 13 63, srcInfoPoints = []}) "W#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 64 13 76, srcInfoPoints = []}) (PrimWord (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 13 64 13 76, srcInfoPoints = []}) 255 "0b11111111")),App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 14 13 14 97, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 14 13 14 15, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 14 13 14 15, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 14 13 14 15, srcInfoPoints = []}) "W#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 14 16 14 97, srcInfoPoints = []}) (PrimWord (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 14 16 14 97, srcInfoPoints = []}) 1 "0b00000000000000000000000000000000000000000000000000000000000000000000000000001"))])),Qualifier (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 5 21 12, srcInfoPoints = []}) (App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 5 21 12, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 5 17 10, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 5 17 10, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 5 17 10, srcInfoPoints = []}) "print"))) (List (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 11 21 12, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 11 17 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 16 17 17,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 21 17 22,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 27 17 28,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 33 17 34,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 40 17 41,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 47 17 48,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 54 17 55,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 11 18 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 17 18 18,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 23 18 24,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 30 18 31,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 37 18 38,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 45 18 46,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 53 18 54,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 61 18 62,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 19 11 19 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 20 11 20 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 21 11 21 12]}) [Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 13 17 16, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 13 17 16, srcInfoPoints = []}) 0 "0b0"),Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 18 17 21, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 18 17 21, srcInfoPoints = []}) 1 "0b1"),Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 23 17 27, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 23 17 27, srcInfoPoints = []}) 2 "0b10"),Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 29 17 33, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 29 17 33, srcInfoPoints = []}) 3 "0b11"),Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 35 17 40, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 35 17 40, srcInfoPoints = []}) 4 "0b100"),Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 42 17 47, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 42 17 47, srcInfoPoints = []}) 5 "0b101"),Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 49 17 54, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 49 17 54, srcInfoPoints = []}) 6 "0b110"),ExpTypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 56 17 72, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 62 17 64]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 56 17 61, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 56 17 61, srcInfoPoints = []}) 7 "0b111")) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 65 17 72, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 65 17 72, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 17 65 17 72, srcInfoPoints = []}) "Integer"))),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 13 18 17, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 13 18 14]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 14 18 17, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 14 18 17, srcInfoPoints = []}) 0 "0b0")),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 19 18 23, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 19 18 20]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 20 18 23, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 20 18 23, srcInfoPoints = []}) 1 "0b1")),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 25 18 30, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 25 18 26]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 26 18 30, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 26 18 30, srcInfoPoints = []}) 2 "0b10")),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 32 18 37, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 32 18 33]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 33 18 37, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 33 18 37, srcInfoPoints = []}) 3 "0b11")),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 39 18 45, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 39 18 40]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 40 18 45, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 40 18 45, srcInfoPoints = []}) 4 "0b100")),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 47 18 53, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 47 18 48]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 48 18 53, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 48 18 53, srcInfoPoints = []}) 5 "0b101")),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 55 18 61, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 55 18 56]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 56 18 61, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 56 18 61, srcInfoPoints = []}) 6 "0b110")),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 63 18 69, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 63 18 64]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 64 18 69, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 18 64 18 69, srcInfoPoints = []}) 7 "0b111")),Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 19 13 19 143, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 19 13 19 143, srcInfoPoints = []}) 340282366920938463463374607431768211455 "0b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"),NegApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 20 13 20 144, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 20 13 20 14]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 20 14 20 144, srcInfoPoints = []}) (Int (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 20 14 20 144, srcInfoPoints = []}) 340282366920938463463374607431768211455 "0b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"))])),Qualifier (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 5 23 47, srcInfoPoints = []}) (App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 5 23 47, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 5 23 10, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 5 23 10, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 5 23 10, srcInfoPoints = []}) "print"))) (List (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 11 23 47, srcInfoPoints = [SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 11 23 12,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 29 23 30,SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 46 23 47]}) [InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 13 23 29, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 13 23 16, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 13 23 16, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 13 23 16, srcInfoPoints = []}) "I8#"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 17 23 18, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 17 23 18, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 17 23 18, srcInfoPoints = []}) "-"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 18 23 29, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 18 23 29, srcInfoPoints = []}) 128 "0B10000000")),App (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 31 23 45, srcInfoPoints = []}) (Con (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 31 23 34, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 31 23 34, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 31 23 34, srcInfoPoints = []}) "I8#"))) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 35 23 45, srcInfoPoints = []}) (PrimInt (SrcSpanInfo {srcInfoSpan = SrcSpan "tests/examples/BinaryLiteralsGood.hs" 23 35 23 45, srcInfoPoints = []}) 127 "0B1111111"))]))])) Nothing],[])
