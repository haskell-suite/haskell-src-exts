ParseOk (Module (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 13, srcSpanEndColumn = 1}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 1, srcSpanEndLine = 3, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 1, srcSpanEndLine = 3, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 1, srcSpanEndLine = 3, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 1, srcSpanEndLine = 9, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 13, srcSpanStartColumn = 1, srcSpanEndLine = 13, srcSpanEndColumn = 1},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 13, srcSpanStartColumn = 1, srcSpanEndLine = 13, srcSpanEndColumn = 1}]}) Nothing [LanguagePragma (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 37}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 1, srcSpanStartColumn = 1, srcSpanEndLine = 1, srcSpanEndColumn = 13},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 1, srcSpanStartColumn = 34, srcSpanEndLine = 1, srcSpanEndColumn = 37}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 1, srcSpanStartColumn = 14, srcSpanEndLine = 1, srcSpanEndColumn = 33}, srcInfoPoints = []}) "ScopedTypeVariables"]] [] [TypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 1, srcSpanEndLine = 3, srcSpanEndColumn = 16}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 6, srcSpanEndLine = 3, srcSpanEndColumn = 8}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 1, srcSpanEndLine = 3, srcSpanEndColumn = 5}, srcInfoPoints = []}) "test"] (TyApp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 9, srcSpanEndLine = 3, srcSpanEndColumn = 16}, srcInfoPoints = []}) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 9, srcSpanEndLine = 3, srcSpanEndColumn = 11}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 9, srcSpanEndLine = 3, srcSpanEndColumn = 11}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 9, srcSpanEndLine = 3, srcSpanEndColumn = 11}, srcInfoPoints = []}) "IO"))) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 12, srcSpanEndLine = 3, srcSpanEndColumn = 16}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 12, srcSpanEndLine = 3, srcSpanEndColumn = 16}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 3, srcSpanStartColumn = 12, srcSpanEndLine = 3, srcSpanEndColumn = 16}, srcInfoPoints = []}) "Char")))),PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 9, srcSpanEndColumn = 0}, srcInfoPoints = []}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 5}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 4, srcSpanStartColumn = 1, srcSpanEndLine = 4, srcSpanEndColumn = 5}, srcInfoPoints = []}) "test")) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 4, srcSpanStartColumn = 6, srcSpanEndLine = 9, srcSpanEndColumn = 0}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 4, srcSpanStartColumn = 6, srcSpanEndLine = 4, srcSpanEndColumn = 7}]}) (Do (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 4, srcSpanStartColumn = 8, srcSpanEndLine = 9, srcSpanEndColumn = 0}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 4, srcSpanStartColumn = 8, srcSpanEndLine = 4, srcSpanEndColumn = 10},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 5, srcSpanEndLine = 5, srcSpanEndColumn = 5},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 5, srcSpanEndLine = 6, srcSpanEndColumn = 5},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 1, srcSpanEndLine = 9, srcSpanEndColumn = 0}]}) [Generator (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 5, srcSpanEndLine = 5, srcSpanEndColumn = 25}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 15, srcSpanEndLine = 5, srcSpanEndColumn = 17}]}) (PatTypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 5, srcSpanEndLine = 5, srcSpanEndColumn = 14}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 7, srcSpanEndLine = 5, srcSpanEndColumn = 9}]}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 5, srcSpanEndLine = 5, srcSpanEndColumn = 6}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 5, srcSpanEndLine = 5, srcSpanEndColumn = 6}, srcInfoPoints = []}) "x")) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 10, srcSpanEndLine = 5, srcSpanEndColumn = 14}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 10, srcSpanEndLine = 5, srcSpanEndColumn = 14}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 10, srcSpanEndLine = 5, srcSpanEndColumn = 14}, srcInfoPoints = []}) "Char")))) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 18, srcSpanEndLine = 5, srcSpanEndColumn = 25}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 18, srcSpanEndLine = 5, srcSpanEndColumn = 25}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 5, srcSpanStartColumn = 18, srcSpanEndLine = 5, srcSpanEndColumn = 25}, srcInfoPoints = []}) "getChar"))),Qualifier (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 5, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = []}) (App (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 5, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 5, srcSpanEndLine = 6, srcSpanEndColumn = 11}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 5, srcSpanEndLine = 6, srcSpanEndColumn = 11}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 5, srcSpanEndLine = 6, srcSpanEndColumn = 11}, srcInfoPoints = []}) "return"))) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 12, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 12, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 6, srcSpanStartColumn = 12, srcSpanEndLine = 6, srcSpanEndColumn = 13}, srcInfoPoints = []}) "x"))))])) Nothing,PatBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 1, srcSpanEndLine = 9, srcSpanEndColumn = 26}, srcInfoPoints = []}) (PatTypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 1, srcSpanEndLine = 9, srcSpanEndColumn = 16}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 7, srcSpanEndLine = 9, srcSpanEndColumn = 9}]}) (PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 1, srcSpanEndLine = 9, srcSpanEndColumn = 6}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 1, srcSpanEndLine = 9, srcSpanEndColumn = 6}, srcInfoPoints = []}) "value")) (TyCon (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 10, srcSpanEndLine = 9, srcSpanEndColumn = 16}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 10, srcSpanEndLine = 9, srcSpanEndColumn = 16}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 10, srcSpanEndLine = 9, srcSpanEndColumn = 16}, srcInfoPoints = []}) "String")))) (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 17, srcSpanEndLine = 9, srcSpanEndColumn = 26}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 17, srcSpanEndLine = 9, srcSpanEndColumn = 18}]}) (Lit (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 19, srcSpanEndLine = 9, srcSpanEndColumn = 26}, srcInfoPoints = []}) (String (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 9, srcSpanStartColumn = 19, srcSpanEndLine = 9, srcSpanEndColumn = 26}, srcInfoPoints = []}) "Hello" "Hello"))) Nothing,TypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 40}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 12, srcSpanEndLine = 11, srcSpanEndColumn = 14}]}) [Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 1, srcSpanEndLine = 11, srcSpanEndColumn = 11}, srcInfoPoints = []}) "forallTest"] (TyForall (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 15, srcSpanEndLine = 11, srcSpanEndColumn = 40}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 15, srcSpanEndLine = 11, srcSpanEndColumn = 21},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 24, srcSpanEndLine = 11, srcSpanEndColumn = 25}]}) (Just [UnkindedVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 22, srcSpanEndLine = 11, srcSpanEndColumn = 23}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 22, srcSpanEndLine = 11, srcSpanEndColumn = 23}, srcInfoPoints = []}) "x")]) Nothing (TyForall (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 26, srcSpanEndLine = 11, srcSpanEndColumn = 40}, srcInfoPoints = []}) Nothing (Just (CxSingle (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 26, srcSpanEndLine = 11, srcSpanEndColumn = 33}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 31, srcSpanEndLine = 11, srcSpanEndColumn = 33}]}) (ClassA (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 26, srcSpanEndLine = 11, srcSpanEndColumn = 33}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 31, srcSpanEndLine = 11, srcSpanEndColumn = 33}]}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 26, srcSpanEndLine = 11, srcSpanEndColumn = 28}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 26, srcSpanEndLine = 11, srcSpanEndColumn = 28}, srcInfoPoints = []}) "Eq")) [TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 29, srcSpanEndLine = 11, srcSpanEndColumn = 30}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 29, srcSpanEndLine = 11, srcSpanEndColumn = 30}, srcInfoPoints = []}) "x")]))) (TyFun (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 34, srcSpanEndLine = 11, srcSpanEndColumn = 40}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 36, srcSpanEndLine = 11, srcSpanEndColumn = 38}]}) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 34, srcSpanEndLine = 11, srcSpanEndColumn = 35}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 34, srcSpanEndLine = 11, srcSpanEndColumn = 35}, srcInfoPoints = []}) "x")) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 39, srcSpanEndLine = 11, srcSpanEndColumn = 40}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 11, srcSpanStartColumn = 39, srcSpanEndLine = 11, srcSpanEndColumn = 40}, srcInfoPoints = []}) "x"))))),FunBind (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 54}, srcInfoPoints = []}) [Match (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 54}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 1, srcSpanEndLine = 12, srcSpanEndColumn = 11}, srcInfoPoints = []}) "forallTest") [PVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 12, srcSpanEndLine = 12, srcSpanEndColumn = 13}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 12, srcSpanEndLine = 12, srcSpanEndColumn = 13}, srcInfoPoints = []}) "x")] (UnGuardedRhs (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 14, srcSpanEndLine = 12, srcSpanEndColumn = 54}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 14, srcSpanEndLine = 12, srcSpanEndColumn = 15}]}) (If (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 16, srcSpanEndLine = 12, srcSpanEndColumn = 54}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 16, srcSpanEndLine = 12, srcSpanEndColumn = 18},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 26, srcSpanEndLine = 12, srcSpanEndColumn = 30},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 48, srcSpanEndLine = 12, srcSpanEndColumn = 52}]}) (InfixApp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 19, srcSpanEndLine = 12, srcSpanEndColumn = 25}, srcInfoPoints = []}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 19, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 19, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 19, srcSpanEndLine = 12, srcSpanEndColumn = 20}, srcInfoPoints = []}) "x"))) (QVarOp (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 21, srcSpanEndLine = 12, srcSpanEndColumn = 23}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 21, srcSpanEndLine = 12, srcSpanEndColumn = 23}, srcInfoPoints = []}) (Symbol (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 21, srcSpanEndLine = 12, srcSpanEndColumn = 23}, srcInfoPoints = []}) "=="))) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 24, srcSpanEndLine = 12, srcSpanEndColumn = 25}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 24, srcSpanEndLine = 12, srcSpanEndColumn = 25}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 24, srcSpanEndLine = 12, srcSpanEndColumn = 25}, srcInfoPoints = []}) "x")))) (Paren (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 31, srcSpanEndLine = 12, srcSpanEndColumn = 47}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 31, srcSpanEndLine = 12, srcSpanEndColumn = 32},SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 46, srcSpanEndLine = 12, srcSpanEndColumn = 47}]}) (ExpTypeSig (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 32, srcSpanEndLine = 12, srcSpanEndColumn = 46}, srcInfoPoints = [SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 42, srcSpanEndLine = 12, srcSpanEndColumn = 44}]}) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 32, srcSpanEndLine = 12, srcSpanEndColumn = 41}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 32, srcSpanEndLine = 12, srcSpanEndColumn = 41}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 32, srcSpanEndLine = 12, srcSpanEndColumn = 41}, srcInfoPoints = []}) "undefined"))) (TyVar (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 45, srcSpanEndLine = 12, srcSpanEndColumn = 46}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 45, srcSpanEndLine = 12, srcSpanEndColumn = 46}, srcInfoPoints = []}) "x")))) (Var (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 53, srcSpanEndLine = 12, srcSpanEndColumn = 54}, srcInfoPoints = []}) (UnQual (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 53, srcSpanEndLine = 12, srcSpanEndColumn = 54}, srcInfoPoints = []}) (Ident (SrcSpanInfo {srcInfoSpan = SrcSpan {srcSpanFilename = "tests/examples/ScopedTypeVariables.hs", srcSpanStartLine = 12, srcSpanStartColumn = 53, srcSpanEndLine = 12, srcSpanEndColumn = 54}, srcInfoPoints = []}) "x"))))) Nothing]],[])
